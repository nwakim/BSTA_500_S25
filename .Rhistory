install.packages("rnhanesdata")
library(rnhanesdata)
install.package("devtools")
install.packages("devtools")
devtools::install_github("andrew-leroux/rnhanesdata")
?nhanesdata
?rnhanesdata
library(rnhanesdata)
?rnhanesdata
## load NHANES data
data <- readRDS("Data/nhanes_fda_with_r.rds")
library(here)
library(tidyverse)
library(ggplot2)
library(gridExtra)
library(ggpubr)
library(here)
here()
## load NHANES data
data <- readRDS(here("../NHANES_work/Data/nhanes_fda_with_r.rds"))
## plot NHANES data
id <- c(75111,77936,82410)
unit <- "MIMS"
upper <- 80
dow <- c("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday")
col_pal <- c("#EC5565", "#F26E53", "#6798D0", "#FFCE55", "#5BC1A6", "#E788B8", "#9EBFC9")
## layout matrix for the plot
layout_subj <- layout_all <- matrix(NA, nrow = length(dow), ncol = length(id))
plt <- list() ## a list storing the entire plot
ind_all <- 1 ## the panel number of the entire plot
for(i in 1:length(id)){
ind_subj <- 1 ## the panel number within each subject
id_ind <- which(data$SEQN == id[i])
## extract subject level data and organize them into long format
df_wide <- data.frame(unclass(data[id_ind,unit]),
dow = dow[as.numeric(data$dayofweek[id_ind])])
colnames(df_wide)[1:1440] <- 1:1440
df_long <- pivot_longer(df_wide, cols = 1:1440, names_to = "minute", values_to = "value")
df_long$minute <- as.numeric(df_long$minute)
df_long$dow <- factor(df_long$dow, levels = dow)
df_long$id <- id[i]
## make the plot panel by panel
for(j in dow){
df_plt <- df_long %>% filter(dow == j)
if(nrow(df_plt) != 0){ ## if the subject has data on this day of week
plt[[ind_all]] <- ggplot(df_plt) +
theme_classic() +
geom_line(aes(x = minute, y = value, group = dow), lwd = 0.1, col = col_pal[which(dow == j)]) +
facet_wrap(.~dow, ncol = 1, scales = "fixed") +
theme(strip.text = element_text(size = 10, face = "bold", margin = margin(0.2, 0, 0.05, 0, "cm")),
strip.background = element_blank(),
axis.title = element_blank(),
axis.text = element_text(size = 8),
plot.margin = margin(1,10,2,1)) +
scale_x_continuous(breaks = c(1,6,12,18,23)*60,
labels = c("01:00","06:00","12:00","18:00","23:00")) +
ylim(0, upper)
}else{
plt[[ind_all]] <- ggplot(df_plt) + theme_void()
}
layout_subj[ind_subj, i] <- ind_subj
layout_all[ind_subj, i] <- ind_all
ind_all <- ind_all + 1
ind_subj <- ind_subj + 1
}
}
library(rnhanesdata)
?rnhanesdata
## layout matrix for the plot
layout_subj <- layout_all <- matrix(NA, nrow = length(dow), ncol = length(id))
plt <- list() ## a list storing the entire plot
ind_all <- 1 ## the panel number of the entire plot
for(i in 1:length(id)){
ind_subj <- 1 ## the panel number within each subject
id_ind <- which(data$SEQN == id[i])
## extract subject level data and organize them into long format
df_wide <- data.frame(unclass(data[id_ind,unit]),
dow = dow[as.numeric(data$dayofweek[id_ind])])
colnames(df_wide)[1:1440] <- 1:1440
df_long <- pivot_longer(df_wide, cols = 1:1440, names_to = "minute", values_to = "value")
df_long$minute <- as.numeric(df_long$minute)
df_long$dow <- factor(df_long$dow, levels = dow)
df_long$id <- id[i]
## make the plot panel by panel
for(j in dow){
df_plt <- df_long %>% filter(dow == j)
if(nrow(df_plt) != 0){ ## if the subject has data on this day of week
plt[[ind_all]] <- ggplot(df_plt) +
theme_classic() +
geom_line(aes(x = minute, y = value, group = dow), lwd = 0.1, col = col_pal[which(dow == j)]) +
facet_wrap(.~dow, ncol = 1, scales = "fixed") +
theme(strip.text = element_text(size = 10, face = "bold", margin = margin(0.2, 0, 0.05, 0, "cm")),
strip.background = element_blank(),
axis.title = element_blank(),
axis.text = element_text(size = 8),
plot.margin = margin(1,10,2,1)) +
scale_x_continuous(breaks = c(1,6,12,18,23)*60,
labels = c("01:00","06:00","12:00","18:00","23:00")) +
ylim(0, upper)
}else{
plt[[ind_all]] <- ggplot(df_plt) + theme_void()
}
layout_subj[ind_subj, i] <- ind_subj
layout_all[ind_subj, i] <- ind_all
ind_all <- ind_all + 1
ind_subj <- ind_subj + 1
}
}
id
i=75111
ind_subj <- 1 ## the panel number within each subject
id_ind <- which(data$SEQN == id[i])
## extract subject level data and organize them into long format
df_wide <- data.frame(unclass(data[id_ind,unit]),
dow = dow[as.numeric(data$dayofweek[id_ind])])
colnames(df_wide)[1:1440] <- 1:1440
df_long <- pivot_longer(df_wide, cols = 1:1440, names_to = "minute", values_to = "value")
df_long$minute <- as.numeric(df_long$minute)
df_long$dow <- factor(df_long$dow, levels = dow)
df_long$id <- id[i]
## make the plot panel by panel
for(j in dow){
df_plt <- df_long %>% filter(dow == j)
if(nrow(df_plt) != 0){ ## if the subject has data on this day of week
plt[[ind_all]] <- ggplot(df_plt) +
theme_classic() +
geom_line(aes(x = minute, y = value, group = dow), lwd = 0.1, col = col_pal[which(dow == j)]) +
facet_wrap(.~dow, ncol = 1, scales = "fixed") +
theme(strip.text = element_text(size = 10, face = "bold", margin = margin(0.2, 0, 0.05, 0, "cm")),
strip.background = element_blank(),
axis.title = element_blank(),
axis.text = element_text(size = 8),
plot.margin = margin(1,10,2,1)) +
scale_x_continuous(breaks = c(1,6,12,18,23)*60,
labels = c("01:00","06:00","12:00","18:00","23:00")) +
ylim(0, upper)
}else{
plt[[ind_all]] <- ggplot(df_plt) + theme_void()
}
layout_subj[ind_subj, i] <- ind_subj
layout_all[ind_subj, i] <- ind_all
ind_all <- ind_all + 1
ind_subj <- ind_subj + 1
}
dow
dow
j="Sunday"
df_long$id <- id[i]
df_plt <- df_long %>% filter(dow == j)
if(nrow(df_plt) != 0){ ## if the subject has data on this day of week
plt[[ind_all]] <- ggplot(df_plt) +
theme_classic() +
geom_line(aes(x = minute, y = value, group = dow), lwd = 0.1, col = col_pal[which(dow == j)]) +
facet_wrap(.~dow, ncol = 1, scales = "fixed") +
theme(strip.text = element_text(size = 10, face = "bold", margin = margin(0.2, 0, 0.05, 0, "cm")),
strip.background = element_blank(),
axis.title = element_blank(),
axis.text = element_text(size = 8),
plot.margin = margin(1,10,2,1)) +
scale_x_continuous(breaks = c(1,6,12,18,23)*60,
labels = c("01:00","06:00","12:00","18:00","23:00")) +
ylim(0, upper)
}else{
plt[[ind_all]] <- ggplot(df_plt) + theme_void()
}
layout_subj[ind_subj, i] <- ind_subj
ind_subj
i
layout_subj
i=1
ind_subj <- 1 ## the panel number within each subject
id_ind <- which(data$SEQN == id[i])
## extract subject level data and organize them into long format
df_wide <- data.frame(unclass(data[id_ind,unit]),
dow = dow[as.numeric(data$dayofweek[id_ind])])
data[id_ind,unit]
data$dayofweek[id_ind]
View(data)
colnames(data)
## load NHANES data
data <- readRDS(here("../NHANES_work/Data/nhanes_fda_with_r_ml.rds"))
## plot NHANES data
id <- c(75111,77936,82410)
unit <- "MIMS"
upper <- 80
dow <- c("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday")
col_pal <- c("#EC5565", "#F26E53", "#6798D0", "#FFCE55", "#5BC1A6", "#E788B8", "#9EBFC9")
## layout matrix for the plot
layout_subj <- layout_all <- matrix(NA, nrow = length(dow), ncol = length(id))
plt <- list() ## a list storing the entire plot
ind_all <- 1 ## the panel number of the entire plot
for(i in 1:length(id)){
ind_subj <- 1 ## the panel number within each subject
id_ind <- which(data$SEQN == id[i])
## extract subject level data and organize them into long format
df_wide <- data.frame(unclass(data[id_ind,unit]),
dow = dow[as.numeric(data$dayofweek[id_ind])])
colnames(df_wide)[1:1440] <- 1:1440
df_long <- pivot_longer(df_wide, cols = 1:1440, names_to = "minute", values_to = "value")
df_long$minute <- as.numeric(df_long$minute)
df_long$dow <- factor(df_long$dow, levels = dow)
df_long$id <- id[i]
## make the plot panel by panel
for(j in dow){
df_plt <- df_long %>% filter(dow == j)
if(nrow(df_plt) != 0){ ## if the subject has data on this day of week
plt[[ind_all]] <- ggplot(df_plt) +
theme_classic() +
geom_line(aes(x = minute, y = value, group = dow), lwd = 0.1, col = col_pal[which(dow == j)]) +
facet_wrap(.~dow, ncol = 1, scales = "fixed") +
theme(strip.text = element_text(size = 10, face = "bold", margin = margin(0.2, 0, 0.05, 0, "cm")),
strip.background = element_blank(),
axis.title = element_blank(),
axis.text = element_text(size = 8),
plot.margin = margin(1,10,2,1)) +
scale_x_continuous(breaks = c(1,6,12,18,23)*60,
labels = c("01:00","06:00","12:00","18:00","23:00")) +
ylim(0, upper)
}else{
plt[[ind_all]] <- ggplot(df_plt) + theme_void()
}
layout_subj[ind_subj, i] <- ind_subj
layout_all[ind_subj, i] <- ind_all
ind_all <- ind_all + 1
ind_subj <- ind_subj + 1
}
}
## plot all panels of the plot
grid.arrange(grobs = lapply(1:length(id), function(i) {
arrangeGrob(grobs = plt[layout_all[,i]],
top = text_grob(paste0("SEQN ",id[i]), face = "bold", size = 12),
bottom = text_grob("Time of Day", size = 10),
left = text_grob(unit, size = 10, rot = 90), ncol = 1,
layout_matrix = layout_subj[,i,drop = FALSE])}), ncol = length(id))
## load NHANES data
data <- readRDS(here("../NHANES_work/Data/nhanes_fda_with_r_ml.rds"))
## plot NHANES data
id <- c(75111,77936,82410)
unit <- "MIMS"
upper <- 80
dow <- c("Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday")
col_pal <- c("#EC5565", "#F26E53", "#6798D0", "#FFCE55", "#5BC1A6", "#E788B8", "#9EBFC9")
## layout matrix for the plot
layout_subj <- layout_all <- matrix(NA, nrow = length(dow), ncol = length(id))
plt <- list() ## a list storing the entire plot
ind_all <- 1 ## the panel number of the entire plot
for(i in 1:length(id)){
ind_subj <- 1 ## the panel number within each subject
id_ind <- which(data$SEQN == id[i])
## extract subject level data and organize them into long format
df_wide <- data.frame(unclass(data[id_ind,unit]),
dow = dow[as.numeric(data$dayofweek[id_ind])])
colnames(df_wide)[1:1440] <- 1:1440
df_long <- pivot_longer(df_wide, cols = 1:1440, names_to = "minute", values_to = "value")
df_long$minute <- as.numeric(df_long$minute)
df_long$dow <- factor(df_long$dow, levels = dow)
df_long$id <- id[i]
## make the plot panel by panel
for(j in dow){
df_plt <- df_long %>% filter(dow == j)
if(nrow(df_plt) != 0){ ## if the subject has data on this day of week
plt[[ind_all]] <- ggplot(df_plt) +
theme_classic() +
geom_line(aes(x = minute, y = value, group = dow), lwd = 0.1, col = col_pal[which(dow == j)]) +
facet_wrap(.~dow, ncol = 1, scales = "fixed") +
theme(strip.text = element_text(size = 10, face = "bold", margin = margin(0.2, 0, 0.05, 0, "cm")),
strip.background = element_blank(),
axis.title = element_blank(),
axis.text = element_text(size = 8),
plot.margin = margin(1,10,2,1)) +
scale_x_continuous(breaks = c(1,6,12,18,23)*60,
labels = c("01:00","06:00","12:00","18:00","23:00")) +
ylim(0, upper)
}else{
plt[[ind_all]] <- ggplot(df_plt) + theme_void()
}
layout_subj[ind_subj, i] <- ind_subj
layout_all[ind_subj, i] <- ind_all
ind_all <- ind_all + 1
ind_subj <- ind_subj + 1
}
}
## plot all panels of the plot
grid.arrange(grobs = lapply(1:length(id), function(i) {
arrangeGrob(grobs = plt[layout_all[,i]],
top = text_grob(paste0("SEQN ",id[i]), face = "bold", size = 12),
bottom = text_grob("Time of Day", size = 10),
left = text_grob(unit, size = 10, rot = 90), ncol = 1,
layout_matrix = layout_subj[,i,drop = FALSE])}), ncol = length(id))
## plot all panels of the plot
grid.arrange(grobs = lapply(1:length(id), function(i) {
arrangeGrob(grobs = plt[layout_all[,i]],
top = text_grob(paste0("SEQN ",id[i]), face = "bold", size = 12),
bottom = text_grob("Time of Day", size = 10),
left = text_grob(unit, size = 10, rot = 90), ncol = 1,
layout_matrix = layout_subj[,i,drop = FALSE])}), ncol = length(id))
## plot all panels of the plot
grid.arrange(grobs = lapply(1:length(id), function(i) {
arrangeGrob(grobs = plt[layout_all[,i]],
top = text_grob(paste0("SEQN ",id[i]), face = "bold", size = 12),
bottom = text_grob("Time of Day", size = 10),
left = text_grob(unit, size = 10, rot = 90), ncol = 1,
layout_matrix = layout_subj[,i,drop = FALSE])}), ncol = length(id))
